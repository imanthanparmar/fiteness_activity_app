{"ast":null,"code":"var _jsxFileName = \"/home/manthan/Workspace/fitnessActivityApp/src/features/dashboard/component/heartRateChart.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { barChartOptions } from 'shared/constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, Filler);\nconst HeartRateChart = props => {\n  _s();\n  const {\n    userActivities\n  } = props;\n  const [averageHeartRate, setAverageHeartRate] = useState();\n  const [maxHeartRateBpm, setMaxHeartRateBpm] = useState();\n  const handleChartData = userActivities => {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: 'Average heart-rate',\n        data: [],\n        fill: true,\n        // Fill the area under the line\n        backgroundColor: '',\n        borderColor: '#5792ff ',\n        borderWidth: 0.5,\n        barThickness: 6,\n        borderRadius: 25\n      }]\n    };\n    userActivities.forEach(item => {\n      console.log('item', item);\n      chartData.labels.push(item.name);\n      chartData.datasets[0].data.push(Math.trunc(item.heart_rate.average));\n    });\n    return chartData;\n  };\n  const chartData = handleChartData(userActivities);\n  const heartRateAverage = useCallback(() => {\n    let averageHeartRate = 0;\n    let maxHeartRate = 0;\n    userActivities.forEach(activity => {\n      if (activity.heart_rate) {\n        const {\n          average,\n          max\n        } = activity.heart_rate;\n        averageHeartRate += average;\n        maxHeartRate += max;\n      }\n    });\n    setAverageHeartRate(averageHeartRate / userActivities.length);\n    setMaxHeartRateBpm(maxHeartRate / userActivities.length);\n  }, [userActivities]);\n  useEffect(() => {\n    heartRateAverage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-size--30 font--medium ml--30 \",\n      children: [averageHeartRate, \" - \", maxHeartRateBpm, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font--bold\",\n        children: \"bpm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      options: barChartOptions,\n      data: chartData,\n      className: \"bar-chart__container m--30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(HeartRateChart, \"6Cw1Ma9yMRV5J0DmVZOpFrJrCdE=\");\n_c = HeartRateChart;\nexport default HeartRateChart;\nvar _c;\n$RefreshReg$(_c, \"HeartRateChart\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Filler","barChartOptions","register","HeartRateChart","props","userActivities","averageHeartRate","setAverageHeartRate","maxHeartRateBpm","setMaxHeartRateBpm","handleChartData","chartData","labels","datasets","label","data","fill","backgroundColor","borderColor","borderWidth","barThickness","borderRadius","forEach","item","console","log","push","name","Math","trunc","heart_rate","average","heartRateAverage","maxHeartRate","activity","max","length"],"sources":["/home/manthan/Workspace/fitnessActivityApp/src/features/dashboard/component/heartRateChart.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { IChartData } from '../interface/dashboard.interface';\nimport { barChartOptions } from 'shared/constants/constants';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, Filler);\n\ninterface IProps {\n    userActivities: any\n}\n\nconst HeartRateChart: React.FC<IProps> = (props) => {\n    const { userActivities } = props;\n    const [averageHeartRate, setAverageHeartRate] = useState<number>();\n\tconst [maxHeartRateBpm, setMaxHeartRateBpm] = useState<number>();\n\tconst handleChartData = (userActivities: any) => {\n\t\tconst chartData: any = {\n\t\t\tlabels: [],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Average heart-rate',\n\t\t\t\t\tdata: [],\n\t\t\t\t\tfill: true, // Fill the area under the line\n\t\t\t\t\tbackgroundColor: '',\n\t\t\t\t\tborderColor: '#5792ff ',\n\t\t\t\t\tborderWidth: 0.5,\n\t\t\t\t\tbarThickness: 6,\n\t\t\t\t\tborderRadius: 25\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tuserActivities.forEach((item: any) => {\n            console.log('item', item)\n\t\t\tchartData.labels.push(item.name);\n\t\t\tchartData.datasets[0].data.push(Math.trunc(item.heart_rate.average));\n\t\t});\n\n\t\treturn chartData;\n\t};\n\n\tconst chartData = handleChartData(userActivities);\n\n\tconst heartRateAverage = useCallback(() => {\n\t\tlet averageHeartRate = 0;\n\t\tlet maxHeartRate = 0;\n\t\tuserActivities.forEach((activity: any) => {\n\t\t\tif (activity.heart_rate) {\n\t\t\t\tconst { average, max } = activity.heart_rate;\n\t\t\t\taverageHeartRate += average;\n\t\t\t\tmaxHeartRate += max;\n\t\t\t}\n\t\t});\n\t\tsetAverageHeartRate(averageHeartRate / userActivities.length);\n\t\tsetMaxHeartRateBpm(maxHeartRate / userActivities.length);\n\t}, [userActivities]);\n\n\tuseEffect(() => {\n\t\theartRateAverage();\n\t}, []);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<p className='font-size--30 font--medium ml--30 '>\n\t\t\t\t{averageHeartRate} - {maxHeartRateBpm} <span className='font--bold'>bpm</span>\n\t\t\t</p>\n\t\t\t<Bar options={barChartOptions} data={chartData as IChartData} className='bar-chart__container m--30' />\n\t\t</Fragment>\n\t);\n};\n\nexport default HeartRateChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}